require 'spec_helper'

describe 'feeds/malwaredomainlist-url_reputation.feed', :feed do
  let(:provider) { 'malwaredomainlist' }
  let(:name) { 'url_reputation' }

  it_fetches_url 'http://www.malwaredomainlist.com/updatescsv.php'

  describe_parsing_the_file feed_data('malwaredomainlist-url-reputation.txt') do
    it "should have parsed 8 records" do
      expect(num_records_parsed).to eq(8)
    end
    it "should have filtered 0 records" do
      expect(num_records_filtered).to eq(0)
    end
    it "should have missed 0 records" do
      expect(num_records_missed).to eq(0)
    end
  end

  describe_parsing_a_record '"2014/09/17_10:11","qwe.affairedhonneur.us/depqfie59y","192.99.197.131","-","exploit kit","Ben Bazar / benbazar2011y@mail.com","16276"' do
    it "should have parsed" do
      expect(status).to eq(:parsed)
    end
    it "should have parsed 1 event" do
      expect(events.count).to eq(1)
    end
	describe 'event 0' do
      subject { events[0] }
      its(:type) { is_expected.to be(:malware_host) }
	  its(:urls) { is_expected.to eq(build(:urls, values: ['http://qwe.affairedhonneur.us/depqfie59y'])) }
    end
  end

  describe_parsing_a_record '"2014/10/01_09:30","aveconomic.trailswest.org:15106/haddan_files/stories.php","87.118.127.230","ns2.km33436-26.keymachine.de.","exploit kit","T Fankhauser / artstaff@stjoearts.org","31103"' do
    it "should have parsed" do
      expect(status).to eq(:parsed)
    end
    it "should have parsed 1 event" do
      expect(events.count).to eq(1)
    end
	describe 'event 0' do
      subject { events[0] }
      its(:type) { is_expected.to be(:malware_host) }
	  its(:urls) { is_expected.to eq(build(:urls, values: ['http://aveconomic.trailswest.org:15106/haddan_files/stories.php'])) }
    end
  end
end


