require 'spec_helper'

describe 'feeds/malwaredomains-domain_reputation.feed', :feed do
  let(:provider) { 'malwaredomains' }
  let(:name) { 'domain_reputation' }

  it_fetches_url 'http://mirror1.malwaredomains.com/files/domains.txt'

  describe_parsing_the_file feed_data('malwaredomains_domainlist.txt') do
    it "should have parsed 20 records" do
      expect(num_records_parsed).to eq(20)
    end
    it "should have filtered 4 records" do
      expect(num_records_filtered).to eq(4)
    end
  end

  describe_parsing_a_record '	20151231	qyrzfhilst.ru	attackpage	safebrowsing.google.com	20131227	20120308	20110512' do
    it "should have parsed" do
      expect(status).to eq(:parsed)
    end
    it "should have parsed 1 event" do
      expect(events.count).to eq(1)
    end
	describe 'event 0' do
      subject { events[0] }
      its(:type) { is_expected.to be(:malware_host) }
      its(:fqdns) { is_expected.to match_array(['qyrzfhilst.ru']) }
    end
  end

  describe_parsing_a_record '	20151231	xc6.in	iframe	blog.unmaskparasites.com/2009/06/25/hidden-cn-iframes-are-still-prevalent	20131228	20110311	20090830' do
    it "should have parsed" do
      expect(status).to eq(:parsed)
    end
    it "should have parsed 1 event" do
      expect(events.count).to eq(1)
    end
	describe 'event 0' do
      subject { events[0] }
      its(:type) { is_expected.to be(:malware_host) }
      its(:fqdns) { is_expected.to match_array(['xc6.in']) }
    end
  end
end


